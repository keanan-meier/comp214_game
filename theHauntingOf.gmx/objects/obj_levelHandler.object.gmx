<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//handle scroll speed
global.scrollSpeed = -10;
tempScroll = global.scrollSpeed;

//handle spawning and deleting of background and floor
backgroundHeight = sprite_get_height(spr_lvl1_bck);
backgroundWidth = sprite_get_width(spr_lvl1_bck);
backgroundWidthSafe = backgroundWidth;

canDelete = false;

//have to set to zero because gml sucks
currentBackground = 0;
nextBackground = 0;
oldBackground = 0;

//delay to handle obstacles
timeBetween = 0;

//distance
global.distance = 0;

//obstacles
obstacle = 0;
spawnObstacles = 0;

//transitions
levelpopup = 0;

//responsibility
craig = instance_create(-200,675,obj_responsibilty);
craigCount = 0;

//level vars
global.level1 = 500;
global.trans1 = 600;
global.level2 = 1100;
global.trans2 = 1200;
global.level3 = 2000;
global.finish = 2000;

//for testing
global.level1 = 100;
global.trans1 = 200;
global.level2 = 300;
global.trans2 = 400;
global.level3 = 500;
global.finish = 500;

finished = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//INFINITE SCROLLING
if(currentBackground == 0){
    //create background
    currentBackground = instance_create(0,0,obj_background);
       
    //create nextbackground
    nextBackground = instance_create(backgroundWidth,0,obj_background);
    
    //set old background to start
    oldBackground = currentBackground;
} else {
    //background is almost off screen, spawn new one
    if(currentBackground.x &lt;= backgroundWidthSafe * -1) {    
        
        //set current to next
        oldBackground = currentBackground;
        currentBackground = nextBackground;
        
        //make new next
        //create nextbackground
        nextBackground = instance_create(backgroundWidth,0,obj_background);
        //randomize the sprite    will use this and check distance to handle level changing
        
        if(global.distance &lt; global.level1){ //LEVEL 1
        
            //enable obstacles
            spawnObstacles = 1;
        
            //change background
            nextBackground.sprite_index = choose(spr_lvl1_bck,spr_lvl1_bck_1,spr_lvl1_bck_2,spr_lvl1_bck_3,spr_lvl1_bck_4,spr_lvl1_bck_5,spr_lvl1_bck_6,spr_lvl1_bck_7,spr_lvl1_bck_8);
            background_index[0] = choose(bck_lvl1);
            
        }else if(global.distance &lt; global.trans1){ //TRANSITION 1
        
            //disable obstacles
            spawnObstacles = 0;
        
            //change background
            nextBackground.sprite_index = choose(spr_lvl1_transition);
            background_index[0] = choose(bck_transition); 
                    
            //show level popup
            if(levelpopup == 0){
                levelpopup = instance_create(backgroundWidth / 2,-260, obj_lvl_popup);
                levelpopup.sprite_index = spr_lvl2_trans
            }
            
            //move craig
            //if(craig.x != -200){
            //    craig.x = -200;
            //    craig.sprite_index = spr_responsibility_2;
            //}
            
        }else if(global.distance &lt; global.level2){ //LEVEL 2
              
            //enable obstacles
            spawnObstacles = 1;
        
            //delete popup
            instance_destroy(levelpopup);
            levelpopup = 0;
            
            //move craig
            //if(craig.x != 94){
            //    craig.x = 94;
            //}
                       
            //change background 
            nextBackground.sprite_index = choose(spr_lvl2_bck,spr_lvl2_bck_1,spr_lvl2_bck_2,spr_lvl2_bck_3,spr_lvl2_bck_4,spr_lvl2_bck_5,spr_lvl2_bck_6,spr_lvl2_bck_7,spr_lvl2_bck_8);
            background_index[0] = choose(bck_lvl2); 
        
        }else if(global.distance &lt; global.trans2){ //TRANSITION 2 
        
            //disable obstacles
            spawnObstacles = 0;
        
            //change background
            nextBackground.sprite_index = choose(spr_lvl2_transition);
            background_index[0] = choose(bck_transition); 
                    
            //show level popup
            if(levelpopup == 0){
                levelpopup = instance_create(backgroundWidth / 2, -260, obj_lvl_popup);
                levelpopup.sprite_index = spr_lvl3_trans
            }
            
            //move craig
            //if(craig.x != -200){
            //    craig.x = -200;
            //}
            
        }else if(global.distance &lt; global.level3){ // LEVEL 3
        
            //enable obstacles
            spawnObstacles = 1;
        
            //delete popup
            instance_destroy(levelpopup);
            levelpopup = 0;
            
            //move craig
            //if(craig.x != 94){
            //    craig.x = 94;
            //    craig.sprite_index = spr_responsibility_3;
            //}
                       
            //change background 
            nextBackground.sprite_index = choose(spr_lvl3_bck,spr_lvl3_bck_1,spr_lvl3_bck_2,spr_lvl3_bck_3,spr_lvl3_bck_4,spr_lvl3_bck_5,spr_lvl3_bck_6,spr_lvl3_bck_7,spr_lvl3_bck_8);
            background_index[0] = choose(bck_lvl3); 
            
        }
    }
    
    //background is off screen, delete it        
    if(oldBackground.x &lt;= backgroundWidth * -1) {
    
        //speed up scrolling
        if(global.scrollSpeed &gt; -20){
            tempScroll -= 0.5;
            global.scrollSpeed = round(tempScroll);
        }       
    
        //delete old
        instance_destroy(oldBackground);
        
        oldBackground = currentBackground;
    }
};

if(global.distance &gt; global.finish){ // ENDING

    if(finished == false){
        instance_create(backgroundWidth / 2, -260, obj_victory);
    }
    
    finished = true;
    
    if(global.scrollSpeed != 0){
        tempScroll += 0.5;
        global.scrollSpeed = round(tempScroll);
    }
        
    if(spawnObstacles != 0){
        spawnObstacles = 0;
    }
    //move craig
    //if(craig.x != -200){
    //    craig.x = -200;
    //}
    
    
}


//spawn obstacles
if(spawnObstacles == 1){
    timeBetween ++;
    
    //level 1 2 second delay
    if(timeBetween == 60){
        
        //get random number   
        if(round(random_range(0,2)) == 1){
        
            obstacle = instance_create(backgroundWidth + 100 ,backgroundHeight - 50,obj_obstacle);
            obstacle.sprite_index = choose(spr_obstacle_lvl1_1, spr_obstacle_lvl1_2, spr_obstacle_lvl1_3);
        }
        
        timeBetween = 0;
    }
}    
    

if(keyboard_check(vk_right) &amp;&amp; !keyboard_check(vk_left) &amp;&amp; finished == false) {
    global.distance += 0.5;
}






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>526</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_font</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>12</kind>
            <font>font_main</font>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(640,15, "DISTANCE: " + string(round(global.distance)) + "M");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
